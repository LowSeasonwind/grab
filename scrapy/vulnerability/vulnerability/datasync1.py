#coding=utf-8
import sys
import pymongo
import uuid
import re
from items import *
if sys.getdefaultencoding() != 'utf-8':
    reload(sys)
    sys.setdefaultencoding('utf-8')

host = '127.0.0.1'
port = 27017
db_name = 'bug_grab'
sync2_name = 'sync2'
cnvd_name = 'cnvd'
sync3_name = 'sync3'

# 对于cnvd中没有cve或cve不标准的同步处理，同步至sync2


def process():
    client = pymongo.MongoClient(host=host, port=port)
    db = client[db_name]
    cnvd = db[cnvd_name]
    sync2 = db[sync2_name]

    cursor = cnvd.find()
    print '**************开始处理*********************'
    print '--------------第一步-----------------------'
    total = 0
    i = 0
    for index in cursor:
        cnvd = index['vulnerability'].get('cnvd')
        count = sync2.find({'vulnerability.cnvd':cnvd}).count()
        i +=1
        print i,':'
        if not count:
            total +=1
            print '\t',total,'\t',cnvd
            # 同步处理
            # 1. cnvd有的对应好几个cve
            # 2. cnvd is_ics $
            # 3. cnvd vulnerability.vulTypy ‘’ ‘ ’ $
            # 4. vol threadTypy threadType
            # 5. cvss cvssBaseScore float $
            # 6. cvss riskLevel $
            item = BugItem()
            item['kve'] = index['kve']
            item['uuid'] = index['uuid']
            item['is_ics'] = True if index['is_ics'] else False
            if index['CVSS']:
                cvss = index['CVSS']
                # print 'cvss:\n',cvss
                # print 'item:\n',item
                level = cvss.get('riskLevel')
                if '未评级' in level:
                    item['CVSS'] = None
                else:
                    if cvss.get('cvssBaseScore'):
                        score = float(cvss.get('cvssBaseScore'))
                        if score == 10.0:
                            cvss['riskLevel'] = '危急'
                        elif score >= 7.0:
                            cvss['riskLevel'] = '高危'
                        elif score >= 4.0:
                            cvss['riskLevel'] = '中危'
                        else:
                            cvss['riskLevel'] = '低危'
                        item['CVSS'] = cvss
                        # print 'cvss:\n', cvss
                        # print 'item:\n', item
                    else:
                        item['CVSS'] = None
            if item['CVSS']:
                cvss = item['CVSS']
                score = cvss['cvssBaseScore']
                confImpact = cvss['confImpact']
                integImpact = cvss['integImpact']
                availImpact = cvss['availImpact']
                accessComplexity = cvss['accessComplexity']
                accessVector = cvss['accessVector']
                authentication = cvss['authentication']
                if isinstance(score, unicode):
                    cvss['cvssBaseScore'] = float(score.strip())
                if isinstance(confImpact, unicode):
                    cvss['confImpact'] = float(confImpact.strip())
                if isinstance(availImpact, unicode):
                    cvss['availImpact'] = float(availImpact.strip())
                if isinstance(integImpact, unicode):
                    cvss['integImpact'] = float(integImpact.strip())
                if isinstance(accessComplexity, unicode):
                    cvss['accessComplexity'] = float(accessComplexity.strip())
                if isinstance(accessVector, unicode):
                    cvss['accessVector'] = float(accessVector.strip())
                if isinstance(authentication, unicode):
                    cvss['authentication'] = float(authentication.strip())
                item['CVSS'] = cvss
            vul = index['vulnerability']
            vul['vulType'] = vul['vulType'] if vul['vulType'] else None
            vul['threadTypy'] = vul['threadTypy'] if vul['threadTypy'] else None
            item['vulnerability'] = vul
            item['product'] = index['product']
            sync2.save(dict(item))
    print '--------------第一步结束-------------------'
    print '--------------第二步-----------------------'
    with open('vendor.txt', 'r+') as f:
        list = f.readlines()
        vset = set(list)
        for k in vset:
            print k
            print sync2.find({'is_ics': False, 'product.vendor': {'$regex': k.strip()}}).count()
            sync2.update({'is_ics': False, 'product.vendor': {'$regex': k.strip()}},
                            {'$set': {'is_ics': True}},multi=True)
    print '--------------第二步结束---------------------'
    print '--------------第三步-----------------------'
    sync2.update({},{'$rename':{'vulnerability.threadTypy':'vulnerability.threadType'}},False,multi=True)
    print '--------------第三步结束-----------------------'
    sync2.update({'vulnerability.threadType':{'$regex':'^/s*$'}},
                 {'$set':{'vulnerability.threadType':None}},False,multi=True)
    sync2.update({'vulnerability.vulType': {'$regex': '^/s*$'}},
                 {'$set': {'vulnerability.vulType': None}}, False, multi=True)

    client.close()

def process2():
    '''
    cnvd中有1个cnvd对应好几个cve，并且cve不标准的情况，需要处理
    '''
    with open('1.log','w+') as f:
        client = pymongo.MongoClient(host=host, port=port)
        db = client[db_name]
        sync2 = db[sync2_name]
        sync3 = db[sync3_name]
        cursor = sync2.find()
        f.writelines('*******************begin***********************\n')
        print '*******************begin***********************'
        total = 0
        j = 0
        k = 0
        num = 0
        for index in cursor:
            cve = index['vulnerability'].get('cve')
            total += 1
            f.writelines('total:%d\n'%total)
            print total
            # cve None '' ' '
            if not cve:
                index['vulnerability']['cve'] = None
                sync3.save(index)
                j +=1
                f.writelines('j:%d,cve:%s\n'%(j,cve))
                print 'j:%d,cve:%s\n'%(j,cve)
                continue
            match = re.match('^CVE-\d{4}-\d{4}$',cve)
            # cve CVE-2000-0207
            if match:
                k += 1
                f.writelines('k:%d,cve:%s\n'%(k,cve))
                print 'k:%d,cve:%s'%(k,cve)
                sync3.save(index)
                continue
            # cve: CVE CVE-2000-0207等等

            cve_trim = cve.replace(' ', '')
            f.writelines('cve_trim:%s\n'%cve_trim)
            print 'cve_trim:%s' % cve_trim
            items = re.findall(r'(CVE-\d{4}-\d{4})', cve_trim)
            if not items:
                if re.match(r'^CVE\s{1}\d{4}-\d{4}$',cve):
                    codes = re.findall(r'\d{4}',cve)
                    cve2 = 'CVE-%s-%s'%(codes[0],codes[1])
                    index['vulnerability']['cve'] = cve2
                    sync3.save(index)
                    f.writelines('不合法的cve：%s,改造后的cve：%s\n'%(cve,cve2))
                    print '不合法的cve：%s,改造后的cve：%s\n'%(cve,cve2)
                    continue
                cnvd = index['vulnerability']['cnvd']
                f.writelines('cve不合法'+cve+'cnvd:'+cnvd+'\n')
                print cve
                index['vulnerability']['cve'] = None
                sync3.save(index)
                continue
            f.writelines('cve:'+cve+'\n')
            print cve
            n = 0
            if re.match('^CVE-\d{4}-\d{5}$',cve):
                index['vulnerability']['cve'] = None
                f.write('错误的cve：%s\n'%cve)
                sync3.save(index)
                continue
            for i in items:
                f.writelines('item:'+i+'\n')
                print i
                item = {}
                item['kve'] = index['kve']
                item['uuid'] = str(uuid.uuid1())
                item['is_ics'] = index['is_ics']
                item['CVSS'] = index['CVSS']
                item['product'] = index['product']
                vul = index['vulnerability']
                vul['cve'] = i
                item['vulnerability'] = vul
                count = sync3.find({'vulnerability.cve': i}).count()
                if count <= 0:
                    n +=1
                    sync3.save(dict(item))
            if not n:
                index['vulnerability']['cve'] = None
                f.writelines('分割开的cve都已经存在于库中,cve:%s'%cve)
                sync3.save(index)
            num += n
            f.writelines('num:%s\n'%num)
            print 'num:',num
        print total,' ',j,' ',k,' ',num
        f.writelines('*******************end************************')
        print '*******************end************************'




if __name__ == '__main__':
    process2()
    #process()








