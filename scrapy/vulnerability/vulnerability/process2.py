#coding=utf-8

import sys
import os
import pymongo
import time

if sys.getdefaultencoding() != 'utf-8':
    reload(sys)
    sys.setdefaultencoding('utf-8')


# 比例处理，不修改数据
host = '127.0.0.1'
port = 27017
db_name = 'bug_grab'
col_name = 'sync'
dir = os.getcwd() +os.sep+ 'result'+os.sep
if not os.path.exists(dir):
    os.mkdir(dir)

def process():
    file = dir+ col_name +' '+time.strftime('%Y-%m-%d %H:%M:%S')+'.txt'
    with open(file, 'w+') as f:
        f.writelines('%s :开始处理:\n'%time.strftime('%Y-%m-%d %H:%M:%S'))
        client = pymongo.MongoClient(host= host, port =port)
        db = client[db_name]
        col = db[col_name]
        count = col.find({'is_ics':True}).count()
        f.writelines('工控漏洞的数量是:%d\n'%count)
        types = col.distinct('vulnerability.vulType',{'is_ics':True})
        f.writelines('工控漏洞的漏洞类型有%d种,详细情况如下:\n'%len(types))
        for i in types:
            num = col.find({'vulnerability.vulType':i,'is_ics':True}).count()
            if i:
                f.writelines('%s:\t\t\t%d\n'%(i.center(50).rjust(10).ljust(10),num))
            elif i == '':
                f.writelines('%s:\t\t\t%d\n'%(' '.center(50).rjust(10).ljust(10),num))
            else:
                f.writelines('%s:\t\t\t%d\n' % ('None'.center(50).rjust(10).ljust(10), num))
        vendors = col.distinct('product.vendor',{'is_ics':True})
        print len(vendors)
        f.writelines('工控漏洞影响的厂商如下:\n')
        sum = 0
        for vendor in vendors:
            num = col.find({'product.vendor':vendor,'is_ics':True}).count()
            f.write('%s:\t\t\t%d\n'%(vendor.center(50),num))
            sum +=num
        s = col.find({'product':[],'is_ics':True}).count()
        print s
        f.writelines('\t无受影响的产品的工控漏洞共有%d个\n'%s)
        f.writelines('\n%s :完成处理'%time.strftime('%Y-%m-%d %H:%M:%S'))
        print sum
        client.close()

if __name__ == '__main__':
    process()